/*
 * Visier Tenant Management APIs
 * Visier APIs for managing tenants
 *
 * The version of the OpenAPI document: 22222222.99201.1200
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BusinessLocationDTO;
import com.konfigthis.client.model.CustomPropertyDTO;
import com.konfigthis.client.model.HomeAnalysisByUserGroupDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TenantManagementAPIUpdateRequestDTO
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TenantManagementAPIUpdateRequestDTO {
  public static final String SERIALIZED_NAME_TENANT_CODE = "tenantCode";
  @SerializedName(SERIALIZED_NAME_TENANT_CODE)
  private String tenantCode;

  public static final String SERIALIZED_NAME_TENANT_DISPLAY_NAME = "tenantDisplayName";
  @SerializedName(SERIALIZED_NAME_TENANT_DISPLAY_NAME)
  private String tenantDisplayName;

  public static final String SERIALIZED_NAME_TENANT_SHORT_NAME = "tenantShortName";
  @SerializedName(SERIALIZED_NAME_TENANT_SHORT_NAME)
  private String tenantShortName;

  public static final String SERIALIZED_NAME_VANITY_URL_NAME = "vanityUrlName";
  @SerializedName(SERIALIZED_NAME_VANITY_URL_NAME)
  private String vanityUrlName;

  public static final String SERIALIZED_NAME_INDUSTRY_CODE = "industryCode";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_CODE)
  private Integer industryCode;

  public static final String SERIALIZED_NAME_PRIMARY_BUSINESS_LOCATION = "primaryBusinessLocation";
  @SerializedName(SERIALIZED_NAME_PRIMARY_BUSINESS_LOCATION)
  private BusinessLocationDTO primaryBusinessLocation;

  public static final String SERIALIZED_NAME_PURCHASED_MODULES = "purchasedModules";
  @SerializedName(SERIALIZED_NAME_PURCHASED_MODULES)
  private List<String> purchasedModules = null;

  public static final String SERIALIZED_NAME_EMBEDDABLE_DOMAINS = "embeddableDomains";
  @SerializedName(SERIALIZED_NAME_EMBEDDABLE_DOMAINS)
  private List<String> embeddableDomains = null;

  public static final String SERIALIZED_NAME_CUSTOM_PROPERTIES = "customProperties";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PROPERTIES)
  private List<CustomPropertyDTO> customProperties = null;

  public static final String SERIALIZED_NAME_SSO_INSTANCE_ISSUERS = "ssoInstanceIssuers";
  @SerializedName(SERIALIZED_NAME_SSO_INSTANCE_ISSUERS)
  private List<String> ssoInstanceIssuers = null;

  public static final String SERIALIZED_NAME_HOME_ANALYSIS_ID = "homeAnalysisId";
  @SerializedName(SERIALIZED_NAME_HOME_ANALYSIS_ID)
  private String homeAnalysisId;

  public static final String SERIALIZED_NAME_HOME_ANALYSIS_BY_USER_GROUP = "homeAnalysisByUserGroup";
  @SerializedName(SERIALIZED_NAME_HOME_ANALYSIS_BY_USER_GROUP)
  private List<HomeAnalysisByUserGroupDTO> homeAnalysisByUserGroup = null;

  /**
   * Specifies the way you want to update values. Default is MERGE.  Valid values:  - &#x60;MERGE&#x60;: Combine the existing values with the new values.  - &#x60;REPLACE&#x60;: Remove existing values and let the new values take their place.
   */
  @JsonAdapter(UpdateActionEnum.Adapter.class)
 public enum UpdateActionEnum {
    MERGE("MERGE"),
    
    REPLACE("REPLACE");

    private String value;

    UpdateActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UpdateActionEnum fromValue(String value) {
      for (UpdateActionEnum b : UpdateActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UpdateActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UpdateActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UpdateActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UpdateActionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_UPDATE_ACTION = "updateAction";
  @SerializedName(SERIALIZED_NAME_UPDATE_ACTION)
  private UpdateActionEnum updateAction;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_CLICK_THROUGH_LINK = "clickThroughLink";
  @SerializedName(SERIALIZED_NAME_CLICK_THROUGH_LINK)
  private String clickThroughLink;

  public TenantManagementAPIUpdateRequestDTO() {
  }

  public TenantManagementAPIUpdateRequestDTO tenantCode(String tenantCode) {
    
    
    
    
    this.tenantCode = tenantCode;
    return this;
  }

   /**
   * A unique identifier for the newly created analytic tenant. Required if creating new tenants.
   * @return tenantCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique identifier for the newly created analytic tenant. Required if creating new tenants.")

  public String getTenantCode() {
    return tenantCode;
  }


  public void setTenantCode(String tenantCode) {
    
    
    
    this.tenantCode = tenantCode;
  }


  public TenantManagementAPIUpdateRequestDTO tenantDisplayName(String tenantDisplayName) {
    
    
    
    
    this.tenantDisplayName = tenantDisplayName;
    return this;
  }

   /**
   * A new display name to assign to the analytic tenant. Required if creating new tenants.
   * @return tenantDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A new display name to assign to the analytic tenant. Required if creating new tenants.")

  public String getTenantDisplayName() {
    return tenantDisplayName;
  }


  public void setTenantDisplayName(String tenantDisplayName) {
    
    
    
    this.tenantDisplayName = tenantDisplayName;
  }


  public TenantManagementAPIUpdateRequestDTO tenantShortName(String tenantShortName) {
    
    
    
    
    this.tenantShortName = tenantShortName;
    return this;
  }

   /**
   * A new short name to assign to the tenant. Required for Enterprise tenants
   * @return tenantShortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A new short name to assign to the tenant. Required for Enterprise tenants")

  public String getTenantShortName() {
    return tenantShortName;
  }


  public void setTenantShortName(String tenantShortName) {
    
    
    
    this.tenantShortName = tenantShortName;
  }


  public TenantManagementAPIUpdateRequestDTO vanityUrlName(String vanityUrlName) {
    
    
    
    
    this.vanityUrlName = vanityUrlName;
    return this;
  }

   /**
   * A new vanity name to assign to the tenant. Required for Enterprise tenants
   * @return vanityUrlName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A new vanity name to assign to the tenant. Required for Enterprise tenants")

  public String getVanityUrlName() {
    return vanityUrlName;
  }


  public void setVanityUrlName(String vanityUrlName) {
    
    
    
    this.vanityUrlName = vanityUrlName;
  }


  public TenantManagementAPIUpdateRequestDTO industryCode(Integer industryCode) {
    
    
    
    
    this.industryCode = industryCode;
    return this;
  }

   /**
   * The 6-digit NAICS code for the industry to which the analytic tenant belongs. If the code is unknown, type 000000.  For 2-digit codes, add trailing zeros at the end to reach 6 digits, such as 620000. Required if creating new tenants.
   * @return industryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The 6-digit NAICS code for the industry to which the analytic tenant belongs. If the code is unknown, type 000000.  For 2-digit codes, add trailing zeros at the end to reach 6 digits, such as 620000. Required if creating new tenants.")

  public Integer getIndustryCode() {
    return industryCode;
  }


  public void setIndustryCode(Integer industryCode) {
    
    
    
    this.industryCode = industryCode;
  }


  public TenantManagementAPIUpdateRequestDTO primaryBusinessLocation(BusinessLocationDTO primaryBusinessLocation) {
    
    
    
    
    this.primaryBusinessLocation = primaryBusinessLocation;
    return this;
  }

   /**
   * The primary location of operations or where business is performed. This field is optional.
   * @return primaryBusinessLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The primary location of operations or where business is performed. This field is optional.")

  public BusinessLocationDTO getPrimaryBusinessLocation() {
    return primaryBusinessLocation;
  }


  public void setPrimaryBusinessLocation(BusinessLocationDTO primaryBusinessLocation) {
    
    
    
    this.primaryBusinessLocation = primaryBusinessLocation;
  }


  public TenantManagementAPIUpdateRequestDTO purchasedModules(List<String> purchasedModules) {
    
    
    
    
    this.purchasedModules = purchasedModules;
    return this;
  }

  public TenantManagementAPIUpdateRequestDTO addPurchasedModulesItem(String purchasedModulesItem) {
    if (this.purchasedModules == null) {
      this.purchasedModules = new ArrayList<>();
    }
    this.purchasedModules.add(purchasedModulesItem);
    return this;
  }

   /**
   * A comma-separated collection of strings that represent the Visier modules assigned to the new analytic tenant. Required if creating new tenants.
   * @return purchasedModules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated collection of strings that represent the Visier modules assigned to the new analytic tenant. Required if creating new tenants.")

  public List<String> getPurchasedModules() {
    return purchasedModules;
  }


  public void setPurchasedModules(List<String> purchasedModules) {
    
    
    
    this.purchasedModules = purchasedModules;
  }


  public TenantManagementAPIUpdateRequestDTO embeddableDomains(List<String> embeddableDomains) {
    
    
    
    
    this.embeddableDomains = embeddableDomains;
    return this;
  }

  public TenantManagementAPIUpdateRequestDTO addEmbeddableDomainsItem(String embeddableDomainsItem) {
    if (this.embeddableDomains == null) {
      this.embeddableDomains = new ArrayList<>();
    }
    this.embeddableDomains.add(embeddableDomainsItem);
    return this;
  }

   /**
   * A comma-separated list of strings that represent the URLs, or domains, in which Visier can be embedded. If domains at the administrating tenant level match the domains at the analytic tenant level, you do not need to include a domain for each analytic tenant. This is optional.
   * @return embeddableDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated list of strings that represent the URLs, or domains, in which Visier can be embedded. If domains at the administrating tenant level match the domains at the analytic tenant level, you do not need to include a domain for each analytic tenant. This is optional.")

  public List<String> getEmbeddableDomains() {
    return embeddableDomains;
  }


  public void setEmbeddableDomains(List<String> embeddableDomains) {
    
    
    
    this.embeddableDomains = embeddableDomains;
  }


  public TenantManagementAPIUpdateRequestDTO customProperties(List<CustomPropertyDTO> customProperties) {
    
    
    
    
    this.customProperties = customProperties;
    return this;
  }

  public TenantManagementAPIUpdateRequestDTO addCustomPropertiesItem(CustomPropertyDTO customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new ArrayList<>();
    }
    this.customProperties.add(customPropertiesItem);
    return this;
  }

   /**
   * A list of objects that represent different customizable properties for the analytic tenant. This is optional.
   * @return customProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of objects that represent different customizable properties for the analytic tenant. This is optional.")

  public List<CustomPropertyDTO> getCustomProperties() {
    return customProperties;
  }


  public void setCustomProperties(List<CustomPropertyDTO> customProperties) {
    
    
    
    this.customProperties = customProperties;
  }


  public TenantManagementAPIUpdateRequestDTO ssoInstanceIssuers(List<String> ssoInstanceIssuers) {
    
    
    
    
    this.ssoInstanceIssuers = ssoInstanceIssuers;
    return this;
  }

  public TenantManagementAPIUpdateRequestDTO addSsoInstanceIssuersItem(String ssoInstanceIssuersItem) {
    if (this.ssoInstanceIssuers == null) {
      this.ssoInstanceIssuers = new ArrayList<>();
    }
    this.ssoInstanceIssuers.add(ssoInstanceIssuersItem);
    return this;
  }

   /**
   * A comma-separated list of strings that represent the issuers for the SSO providers that can authenticate this tenant. This is optional.
   * @return ssoInstanceIssuers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated list of strings that represent the issuers for the SSO providers that can authenticate this tenant. This is optional.")

  public List<String> getSsoInstanceIssuers() {
    return ssoInstanceIssuers;
  }


  public void setSsoInstanceIssuers(List<String> ssoInstanceIssuers) {
    
    
    
    this.ssoInstanceIssuers = ssoInstanceIssuers;
  }


  public TenantManagementAPIUpdateRequestDTO homeAnalysisId(String homeAnalysisId) {
    
    
    
    
    this.homeAnalysisId = homeAnalysisId;
    return this;
  }

   /**
   * The unique ID of the analysis to display for this tenant when a user logs in. This is optional. Causes the API request to take longer because it must publish a project to production.   Retrieve the ID by opening an analysis in the production version of a tenant and copying the string after the last forward slash (/) in the URL. For example: https://jupiter.visier.com/hr/prod/appcontainer?previewId&#x3D;-eZPm8xvo3SUMpD4Q5pdE-6mCj9CQ9K699XgqRGwtOxagH5x2IzDFawlWn3hYqFEfU7nP0YK9ASEzmrNfAihGg..&amp;previewType&#x3D;Production#/analytics/myanalyses/8a4c1d4f-eb61-4da0-9e5b-55bef757c30e   The &#x60;homeAnalysisID&#x60; is 8a4c1d4f-eb61-4da0-9e5b-55bef757c30e. Alternatively, retrieve the ID by copying the &#x60;contentId&#x60; found by following the &#x60;Embed a visualization&#x60; documentation.
   * @return homeAnalysisId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of the analysis to display for this tenant when a user logs in. This is optional. Causes the API request to take longer because it must publish a project to production.   Retrieve the ID by opening an analysis in the production version of a tenant and copying the string after the last forward slash (/) in the URL. For example: https://jupiter.visier.com/hr/prod/appcontainer?previewId=-eZPm8xvo3SUMpD4Q5pdE-6mCj9CQ9K699XgqRGwtOxagH5x2IzDFawlWn3hYqFEfU7nP0YK9ASEzmrNfAihGg..&previewType=Production#/analytics/myanalyses/8a4c1d4f-eb61-4da0-9e5b-55bef757c30e   The `homeAnalysisID` is 8a4c1d4f-eb61-4da0-9e5b-55bef757c30e. Alternatively, retrieve the ID by copying the `contentId` found by following the `Embed a visualization` documentation.")

  public String getHomeAnalysisId() {
    return homeAnalysisId;
  }


  public void setHomeAnalysisId(String homeAnalysisId) {
    
    
    
    this.homeAnalysisId = homeAnalysisId;
  }


  public TenantManagementAPIUpdateRequestDTO homeAnalysisByUserGroup(List<HomeAnalysisByUserGroupDTO> homeAnalysisByUserGroup) {
    
    
    
    
    this.homeAnalysisByUserGroup = homeAnalysisByUserGroup;
    return this;
  }

  public TenantManagementAPIUpdateRequestDTO addHomeAnalysisByUserGroupItem(HomeAnalysisByUserGroupDTO homeAnalysisByUserGroupItem) {
    if (this.homeAnalysisByUserGroup == null) {
      this.homeAnalysisByUserGroup = new ArrayList<>();
    }
    this.homeAnalysisByUserGroup.add(homeAnalysisByUserGroupItem);
    return this;
  }

   /**
   * A list of objects representing the analysis to display to specific user groups when users log in. This is optional. Causes the API request to take longer because it must publish a project to production.
   * @return homeAnalysisByUserGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of objects representing the analysis to display to specific user groups when users log in. This is optional. Causes the API request to take longer because it must publish a project to production.")

  public List<HomeAnalysisByUserGroupDTO> getHomeAnalysisByUserGroup() {
    return homeAnalysisByUserGroup;
  }


  public void setHomeAnalysisByUserGroup(List<HomeAnalysisByUserGroupDTO> homeAnalysisByUserGroup) {
    
    
    
    this.homeAnalysisByUserGroup = homeAnalysisByUserGroup;
  }


  public TenantManagementAPIUpdateRequestDTO updateAction(UpdateActionEnum updateAction) {
    
    
    
    
    this.updateAction = updateAction;
    return this;
  }

   /**
   * Specifies the way you want to update values. Default is MERGE.  Valid values:  - &#x60;MERGE&#x60;: Combine the existing values with the new values.  - &#x60;REPLACE&#x60;: Remove existing values and let the new values take their place.
   * @return updateAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the way you want to update values. Default is MERGE.  Valid values:  - `MERGE`: Combine the existing values with the new values.  - `REPLACE`: Remove existing values and let the new values take their place.")

  public UpdateActionEnum getUpdateAction() {
    return updateAction;
  }


  public void setUpdateAction(UpdateActionEnum updateAction) {
    
    
    
    this.updateAction = updateAction;
  }


  public TenantManagementAPIUpdateRequestDTO enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * If true, the tenant is enabled. Enabled tenants have access to Visier visualizations.
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the tenant is enabled. Enabled tenants have access to Visier visualizations.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public TenantManagementAPIUpdateRequestDTO clickThroughLink(String clickThroughLink) {
    
    
    
    
    this.clickThroughLink = clickThroughLink;
    return this;
  }

   /**
   * A custom URL to redirect users into your portal to see the relevant content. This URL is used for links that are shared by and with your users through the sharing capability or email content. This is optional. Causes the API request to take longer because it must publish a project to production.
   * @return clickThroughLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A custom URL to redirect users into your portal to see the relevant content. This URL is used for links that are shared by and with your users through the sharing capability or email content. This is optional. Causes the API request to take longer because it must publish a project to production.")

  public String getClickThroughLink() {
    return clickThroughLink;
  }


  public void setClickThroughLink(String clickThroughLink) {
    
    
    
    this.clickThroughLink = clickThroughLink;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TenantManagementAPIUpdateRequestDTO instance itself
   */
  public TenantManagementAPIUpdateRequestDTO putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantManagementAPIUpdateRequestDTO tenantManagementAPIUpdateRequestDTO = (TenantManagementAPIUpdateRequestDTO) o;
    return Objects.equals(this.tenantCode, tenantManagementAPIUpdateRequestDTO.tenantCode) &&
        Objects.equals(this.tenantDisplayName, tenantManagementAPIUpdateRequestDTO.tenantDisplayName) &&
        Objects.equals(this.tenantShortName, tenantManagementAPIUpdateRequestDTO.tenantShortName) &&
        Objects.equals(this.vanityUrlName, tenantManagementAPIUpdateRequestDTO.vanityUrlName) &&
        Objects.equals(this.industryCode, tenantManagementAPIUpdateRequestDTO.industryCode) &&
        Objects.equals(this.primaryBusinessLocation, tenantManagementAPIUpdateRequestDTO.primaryBusinessLocation) &&
        Objects.equals(this.purchasedModules, tenantManagementAPIUpdateRequestDTO.purchasedModules) &&
        Objects.equals(this.embeddableDomains, tenantManagementAPIUpdateRequestDTO.embeddableDomains) &&
        Objects.equals(this.customProperties, tenantManagementAPIUpdateRequestDTO.customProperties) &&
        Objects.equals(this.ssoInstanceIssuers, tenantManagementAPIUpdateRequestDTO.ssoInstanceIssuers) &&
        Objects.equals(this.homeAnalysisId, tenantManagementAPIUpdateRequestDTO.homeAnalysisId) &&
        Objects.equals(this.homeAnalysisByUserGroup, tenantManagementAPIUpdateRequestDTO.homeAnalysisByUserGroup) &&
        Objects.equals(this.updateAction, tenantManagementAPIUpdateRequestDTO.updateAction) &&
        Objects.equals(this.enabled, tenantManagementAPIUpdateRequestDTO.enabled) &&
        Objects.equals(this.clickThroughLink, tenantManagementAPIUpdateRequestDTO.clickThroughLink)&&
        Objects.equals(this.additionalProperties, tenantManagementAPIUpdateRequestDTO.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantCode, tenantDisplayName, tenantShortName, vanityUrlName, industryCode, primaryBusinessLocation, purchasedModules, embeddableDomains, customProperties, ssoInstanceIssuers, homeAnalysisId, homeAnalysisByUserGroup, updateAction, enabled, clickThroughLink, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantManagementAPIUpdateRequestDTO {\n");
    sb.append("    tenantCode: ").append(toIndentedString(tenantCode)).append("\n");
    sb.append("    tenantDisplayName: ").append(toIndentedString(tenantDisplayName)).append("\n");
    sb.append("    tenantShortName: ").append(toIndentedString(tenantShortName)).append("\n");
    sb.append("    vanityUrlName: ").append(toIndentedString(vanityUrlName)).append("\n");
    sb.append("    industryCode: ").append(toIndentedString(industryCode)).append("\n");
    sb.append("    primaryBusinessLocation: ").append(toIndentedString(primaryBusinessLocation)).append("\n");
    sb.append("    purchasedModules: ").append(toIndentedString(purchasedModules)).append("\n");
    sb.append("    embeddableDomains: ").append(toIndentedString(embeddableDomains)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    ssoInstanceIssuers: ").append(toIndentedString(ssoInstanceIssuers)).append("\n");
    sb.append("    homeAnalysisId: ").append(toIndentedString(homeAnalysisId)).append("\n");
    sb.append("    homeAnalysisByUserGroup: ").append(toIndentedString(homeAnalysisByUserGroup)).append("\n");
    sb.append("    updateAction: ").append(toIndentedString(updateAction)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    clickThroughLink: ").append(toIndentedString(clickThroughLink)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tenantCode");
    openapiFields.add("tenantDisplayName");
    openapiFields.add("tenantShortName");
    openapiFields.add("vanityUrlName");
    openapiFields.add("industryCode");
    openapiFields.add("primaryBusinessLocation");
    openapiFields.add("purchasedModules");
    openapiFields.add("embeddableDomains");
    openapiFields.add("customProperties");
    openapiFields.add("ssoInstanceIssuers");
    openapiFields.add("homeAnalysisId");
    openapiFields.add("homeAnalysisByUserGroup");
    openapiFields.add("updateAction");
    openapiFields.add("enabled");
    openapiFields.add("clickThroughLink");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TenantManagementAPIUpdateRequestDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TenantManagementAPIUpdateRequestDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TenantManagementAPIUpdateRequestDTO is not found in the empty JSON string", TenantManagementAPIUpdateRequestDTO.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("tenantCode") != null && !jsonObj.get("tenantCode").isJsonNull()) && !jsonObj.get("tenantCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantCode").toString()));
      }
      if ((jsonObj.get("tenantDisplayName") != null && !jsonObj.get("tenantDisplayName").isJsonNull()) && !jsonObj.get("tenantDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantDisplayName").toString()));
      }
      if ((jsonObj.get("tenantShortName") != null && !jsonObj.get("tenantShortName").isJsonNull()) && !jsonObj.get("tenantShortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantShortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantShortName").toString()));
      }
      if ((jsonObj.get("vanityUrlName") != null && !jsonObj.get("vanityUrlName").isJsonNull()) && !jsonObj.get("vanityUrlName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vanityUrlName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vanityUrlName").toString()));
      }
      // validate the optional field `primaryBusinessLocation`
      if (jsonObj.get("primaryBusinessLocation") != null && !jsonObj.get("primaryBusinessLocation").isJsonNull()) {
        BusinessLocationDTO.validateJsonObject(jsonObj.getAsJsonObject("primaryBusinessLocation"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("purchasedModules") != null && !jsonObj.get("purchasedModules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchasedModules` to be an array in the JSON string but got `%s`", jsonObj.get("purchasedModules").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("embeddableDomains") != null && !jsonObj.get("embeddableDomains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `embeddableDomains` to be an array in the JSON string but got `%s`", jsonObj.get("embeddableDomains").toString()));
      }
      if (jsonObj.get("customProperties") != null && !jsonObj.get("customProperties").isJsonNull()) {
        JsonArray jsonArraycustomProperties = jsonObj.getAsJsonArray("customProperties");
        if (jsonArraycustomProperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customProperties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customProperties` to be an array in the JSON string but got `%s`", jsonObj.get("customProperties").toString()));
          }

          // validate the optional field `customProperties` (array)
          for (int i = 0; i < jsonArraycustomProperties.size(); i++) {
            CustomPropertyDTO.validateJsonObject(jsonArraycustomProperties.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ssoInstanceIssuers") != null && !jsonObj.get("ssoInstanceIssuers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssoInstanceIssuers` to be an array in the JSON string but got `%s`", jsonObj.get("ssoInstanceIssuers").toString()));
      }
      if ((jsonObj.get("homeAnalysisId") != null && !jsonObj.get("homeAnalysisId").isJsonNull()) && !jsonObj.get("homeAnalysisId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeAnalysisId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeAnalysisId").toString()));
      }
      if (jsonObj.get("homeAnalysisByUserGroup") != null && !jsonObj.get("homeAnalysisByUserGroup").isJsonNull()) {
        JsonArray jsonArrayhomeAnalysisByUserGroup = jsonObj.getAsJsonArray("homeAnalysisByUserGroup");
        if (jsonArrayhomeAnalysisByUserGroup != null) {
          // ensure the json data is an array
          if (!jsonObj.get("homeAnalysisByUserGroup").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `homeAnalysisByUserGroup` to be an array in the JSON string but got `%s`", jsonObj.get("homeAnalysisByUserGroup").toString()));
          }

          // validate the optional field `homeAnalysisByUserGroup` (array)
          for (int i = 0; i < jsonArrayhomeAnalysisByUserGroup.size(); i++) {
            HomeAnalysisByUserGroupDTO.validateJsonObject(jsonArrayhomeAnalysisByUserGroup.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("updateAction") != null && !jsonObj.get("updateAction").isJsonNull()) && !jsonObj.get("updateAction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateAction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateAction").toString()));
      }
      if ((jsonObj.get("clickThroughLink") != null && !jsonObj.get("clickThroughLink").isJsonNull()) && !jsonObj.get("clickThroughLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clickThroughLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clickThroughLink").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TenantManagementAPIUpdateRequestDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TenantManagementAPIUpdateRequestDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TenantManagementAPIUpdateRequestDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TenantManagementAPIUpdateRequestDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<TenantManagementAPIUpdateRequestDTO>() {
           @Override
           public void write(JsonWriter out, TenantManagementAPIUpdateRequestDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TenantManagementAPIUpdateRequestDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TenantManagementAPIUpdateRequestDTO instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TenantManagementAPIUpdateRequestDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TenantManagementAPIUpdateRequestDTO
  * @throws IOException if the JSON string is invalid with respect to TenantManagementAPIUpdateRequestDTO
  */
  public static TenantManagementAPIUpdateRequestDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TenantManagementAPIUpdateRequestDTO.class);
  }

 /**
  * Convert an instance of TenantManagementAPIUpdateRequestDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

